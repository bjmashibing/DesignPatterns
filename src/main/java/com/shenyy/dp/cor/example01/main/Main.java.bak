package com.shenyy.dp.cor;

import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {


        Msg m = new Msg();
        m.setMessage("大家好:)，欢迎大家访问 mashibing.com ，大家伙儿基本996哦， <script>");

        //Filter[] filters = {new HTMLFilter(), new SensitiveFilter()};
        FilterChain fc = new FilterChain();
        fc.add(new HTMLFilter())
                .add(new SensitiveFilter());
        FilterChain fc2 = new FilterChain();
        fc2.add(new FaceFilter()).add(new URLFilter());
        fc.add(fc2);

        fc.doFilter(m);

        System.out.println(m);
    }
}

class Msg {
    String username;
    String message;

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    @Override
    public String toString() {
        return "Msg{" +
                "message='" + message + '\'' +
                '}';
    }
}

interface Filter { boolean doFilter(Msg m);}

class HTMLFilter implements Filter {
    @Override
    public boolean doFilter(Msg m) {
        String r = m.getMessage();
        r = r.replaceAll("<", "[").replaceAll(">", "]");
        m.setMessage(r);
        return true;
    }
}

class SensitiveFilter implements Filter {
    @Override
    public boolean doFilter(Msg m) {
        String r = m.getMessage();
        r = m.getMessage().replaceAll("996", "955");
        m.setMessage(r);
        return false;
    }
}

class FaceFilter implements Filter {
    @Override
    public boolean doFilter(Msg m) {
        String r = m.getMessage();
        r = m.getMessage().replaceAll(":\\)", "^V^");
        m.setMessage(r);
        return true;
    }
}

class URLFilter implements Filter {
    @Override
    public boolean doFilter(Msg m) {
        String r = m.getMessage();
        r = m.getMessage().replaceAll("mashibing.com", "http://www.mashibing.com");
        m.setMessage(r);
        return true;
    }
}

class FilterChain implements  Filter{
    private List<Filter> filters = new ArrayList<>();
    public FilterChain add(Filter filter) {
        this.filters.add(filter);
        return this;
    }

    public boolean doFilter(Msg m) {

        for(Filter f : filters) {
            if(!f.doFilter(m)) return false;
        }

        return true;
    }
}